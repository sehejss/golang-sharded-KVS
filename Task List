Task List:
  SHARDING =========================
    - Mechanism to determine placement of nodes within shards to ensure fault tolerance +++++++++++++
    - Get the shard IDs of the store (id of each shard)
    = Get the shard ID of a node (which shard a node belongs to)
    = Get the members that belong to a specific shard ID
    = Get the number of keys in a shard
    - Add a node to a shard
    - Mechanism to reshard the store when an administrator(client) sends a reshard request to a node ++++++++++
  VIEW ================================
    NOTHING
  KEY VALUE OPERATIONS ========================
    - all keys need to be evenly distributed across all shards/ a key-to-shard strategy +++++++++
    - any node should be able to determine which shard a key is in
    - PUT/DELETE/GET works for any key for any node keeping causal consistency 


curl --request GET --header "Content-Type: application/json" --write-out "%{http_code}\n" http://localhost:8082/key-value-store-shard/shard-ids

curl --request GET --header "Content-Type: application/json" --write-out "%{http_code}\n" http://localhost:8082/key-value-store-shard/node-shard-id

curl --request GET --header "Content-Type: application/json" --write-out "%{http_code}\n" http://localhost:8082/key-value-store-shard/shard-id-members/<shard-id>

curl --request PUT --header "Content-Type: application/json" --write-out "%{http_code}\n" --data '{"socket-address": "THIS IS A TEST"}' http://localhost:8082/key-value-store-shard/add-member/2

 curl --request GET --header "Content-Type: application/json" --write-out "%{http_code}\n" http://localhost:8082/key-value-store-shard/shard-id-key-count/1

 curl --request PUT --header "Content-Type: application/json" --write-out "%{http_code}\n" --data '{"socket-address": "10.10.0.8:8080"}' http://localhost:8082/key-value-store-shard/add-member/2